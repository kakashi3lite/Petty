name: CI - Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'
  FLUTTER_VERSION: '3.13.x'

permissions:
  contents: read
  security-events: write
  checks: write
  pull-requests: write

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
          disable-sudo: true
          disable-file-monitoring: false

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit[toml] safety detect-secrets semgrep

      - name: Run Bandit security scan
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          bandit -r src/ -f txt

      - name: Run Safety check
        run: |
          safety check --json --output safety-report.json || true
          safety check

      - name: Run secret detection
        run: |
          detect-secrets scan --all-files --baseline .secrets.baseline

      - name: Run Semgrep SAST
        run: |
          semgrep --config=auto src/ --json --output=semgrep-report.json || true
          semgrep --config=auto src/

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
            semgrep-report.json

  python-lint-test:
    name: Python Linting and Testing
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,security,observability]"

      - name: Run Ruff linting
        run: |
          ruff check src/ tests/ --output-format=github

      - name: Run Black formatting check
        run: |
          black --check src/ tests/

      - name: Run MyPy type checking
        run: |
          mypy src/ tests/ --junit-xml=mypy-report.xml

      - name: Run pytest
        env:
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: 1
        run: |
          pytest tests/ --junitxml=test-results.xml --cov=src --cov-report=xml --cov-report=html

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: python-test-results
          path: |
            test-results.xml
            mypy-report.xml
            htmlcov/
            coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage.xml
          flags: python
          name: python-coverage

  flutter-test:
    name: Flutter Testing
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Get Flutter dependencies
        working-directory: mobile_app
        run: flutter pub get

      - name: Run Flutter analyze
        working-directory: mobile_app
        run: flutter analyze --fatal-infos

      - name: Run Dart format check
        working-directory: mobile_app
        run: dart format --set-exit-if-changed .

      - name: Run Flutter tests
        working-directory: mobile_app
        run: flutter test --coverage

      - name: Upload Flutter test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: flutter-test-results
          path: mobile_app/coverage/

  property-based-testing:
    name: Property-Based Testing
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run Hypothesis property tests
        env:
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: 1
        run: |
          pytest tests/ -m "property" --hypothesis-profile=ci -v

  sbom-generation:
    name: Generate SBOM
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,security,observability]"
          pip install cyclonedx-bom pip-audit

      - name: Generate Python SBOM
        run: |
          cyclonedx-py --format json --output python-sbom.json .

      - name: Generate Flutter SBOM
        working-directory: mobile_app
        run: |
          flutter pub deps --json > flutter-deps.json

      - name: Upload SBOMs
        uses: actions/upload-artifact@v3
        with:
          name: sbom-artifacts
          path: |
            python-sbom.json
            mobile_app/flutter-deps.json

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"

  ossf-scorecard:
    name: OSSF Scorecard
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
      contents: read
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Run analysis
        uses: ossf/scorecard-action@v2.3.1
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [python-lint-test, flutter-test]
    services:
      localstack:
        image: localstack/localstack:latest
        env:
          SERVICES: timestream,s3,apigateway,lambda
          DEBUG: 1
        options: >-
          --health-cmd "awslocal s3 ls"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install AWS CLI and SAM CLI
        run: |
          pip install awscli-local
          pip install aws-sam-cli

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,security,observability]"

      - name: Build SAM application
        working-directory: infrastructure
        run: |
          sam build --use-container

      - name: Run integration tests
        env:
          AWS_ENDPOINT_URL: http://localhost:4566
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: us-east-1
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: 1
        run: |
          pytest tests/ -m "integration" -v

  contract-tests:
    name: Contract Tests (Pact)
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run Pact consumer tests
        env:
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: 1
        run: |
          pytest tests/contract/ -v

      - name: Upload Pact files
        uses: actions/upload-artifact@v3
        with:
          name: pact-contracts
          path: pacts/

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate
