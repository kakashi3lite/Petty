name: Build and Sign Artifacts

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

env:
  PYTHON_VERSION: '3.11'
  FLUTTER_VERSION: '3.13.x'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

jobs:
  build-python:
    name: Build Python Artifacts
    runs-on: ubuntu-latest
    outputs:
      artifacts-hash: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@0ae50c0b738891f4a8d77c8c97866c4b92dd0fb6 # v5.2.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build Python package
        run: |
          python -m build

      - name: Generate artifact hashes
        id: hash
        run: |
          cd dist && find . -type f -exec sha256sum {} \; > ../checksums.txt
          echo "hashes=$(base64 -w0 < ../checksums.txt)" >> "$GITHUB_OUTPUT"

      - name: Upload Python artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: python-dist
          path: |
            dist/
            checksums.txt

  build-lambda:
    name: Build Lambda Functions
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Python
        uses: actions/setup-python@0ae50c0b738891f4a8d77c8c97866c4b92dd0fb6 # v5.2.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install SAM CLI
        run: |
          pip install aws-sam-cli

      - name: Build SAM application
        working-directory: infrastructure
        run: |
          sam build --use-container --parallel

      - name: Package Lambda functions
        working-directory: infrastructure
        run: |
          sam package --s3-bucket dummy-bucket --output-template-file packaged-template.yaml

      - name: Generate Lambda checksums
        working-directory: infrastructure
        run: |
          find .aws-sam/build -name "*.zip" -exec sha256sum {} \; > lambda-checksums.txt

      - name: Upload Lambda artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: lambda-artifacts
          path: |
            infrastructure/.aws-sam/build/
            infrastructure/packaged-template.yaml
            infrastructure/lambda-checksums.txt

  build-flutter:
    name: Build Flutter App
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [apk, appbundle]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Flutter
        uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1 # v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Set up Java
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.4.0
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Get Flutter dependencies
        working-directory: mobile_app
        run: flutter pub get

      - name: Build release ${{ matrix.target }}
        working-directory: mobile_app
        run: |
          if [ "${{ matrix.target }}" == "apk" ]; then
            flutter build apk --release --split-per-abi
          else
            flutter build appbundle --release
          fi

      - name: Generate Flutter checksums
        working-directory: mobile_app
        run: |
          find build/app/outputs -name "*.apk" -o -name "*.aab" | xargs sha256sum > flutter-${{ matrix.target }}-checksums.txt

      - name: Upload Flutter artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: flutter-${{ matrix.target }}
          path: |
            mobile_app/build/app/outputs/
            mobile_app/flutter-${{ matrix.target }}-checksums.txt

  sign-artifacts:
    name: Sign Artifacts with Cosign
    runs-on: ubuntu-latest
    needs: [build-python, build-lambda, build-flutter]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Install Cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0

      - name: Download all artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: artifacts/

      - name: Sign Python artifacts
        run: |
          cd artifacts/python-dist/dist
          for file in *.whl *.tar.gz; do
            cosign sign-blob --bundle=${file}.cosign.bundle $file
          done

      - name: Sign Lambda artifacts
        run: |
          cd artifacts/lambda-artifacts/infrastructure/.aws-sam/build
          find . -name "*.zip" -exec cosign sign-blob --bundle={}.cosign.bundle {} \;

      - name: Sign Flutter artifacts
        run: |
          cd artifacts
          find . -name "*.apk" -o -name "*.aab" | while read file; do
            cosign sign-blob --bundle="${file}.cosign.bundle" "$file"
          done

      - name: Upload signed artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: signed-artifacts
          path: artifacts/

  generate-provenance:
    name: Generate SLSA Provenance
    needs: [build-python]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@5a775b367a56d5bd118a224a811bba288150a563 # v2.0.0
    with:
      base64-subjects: "${{ needs.build-python.outputs.artifacts-hash }}"
      upload-assets: true

  container-build:
    name: Build and Sign Container Images
    runs-on: ubuntu-latest
    needs: [build-lambda]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Install Cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Log in to Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6.7.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Sign container image
        run: |
          cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}

      - name: Generate SBOM
        uses: anchore/sbom-action@61119d458adab75f756bc0b9e4bde25725f86a7a # v0.17.2
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}

  security-scan-artifacts:
    name: Security Scan Artifacts
    runs-on: ubuntu-latest
    needs: [sign-artifacts]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Download signed artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: signed-artifacts
          path: artifacts/

      - name: Scan Python packages
        run: |
          pip install safety bandit
          cd artifacts/python-dist/dist
          for wheel in *.whl; do
            echo "Scanning $wheel"
            pip install "$wheel"
            safety check
            pip uninstall -y $(basename "$wheel" .whl)
          done

      - name: Scan APK files
        uses: dwisiswant0/apkleaks-action@7593b1b1b2fb9e5b1f6e4137b6a90b704bb4d7a5 # v1.0.1
        with:
          apk-file: 'artifacts/flutter-apk/mobile_app/build/app/outputs/flutter-apk/app-release.apk'

  publish-release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [sign-artifacts, generate-provenance, security-scan-artifacts]
    if: github.event_name == 'release'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Download signed artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: signed-artifacts
          path: artifacts/

      - name: Create release archive
        run: |
          cd artifacts
          tar -czf petty-release-${{ github.ref_name }}.tar.gz *
          sha256sum petty-release-${{ github.ref_name }}.tar.gz > petty-release-${{ github.ref_name }}.tar.gz.sha256

      - name: Upload release assets
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2.0.8
        with:
          files: |
            artifacts/petty-release-${{ github.ref_name }}.tar.gz
            artifacts/petty-release-${{ github.ref_name }}.tar.gz.sha256
          generate_release_notes: true
